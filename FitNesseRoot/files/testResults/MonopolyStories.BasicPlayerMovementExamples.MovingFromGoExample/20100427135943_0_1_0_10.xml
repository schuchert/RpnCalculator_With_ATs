<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20100403</FitNesseVersion>
  <rootPath>MovingFromGoExample</rootPath>
    <result>
    <counts>
      <right>0</right>
      <wrong>1</wrong>
      <ignores>0</ignores>
      <exceptions>10</exceptions>
    </counts>
    <content><![CDATA[<div class="collapse_rim">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('3784178427409650240');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img3784178427409650240"/>
	</a>
&nbsp;<span class="meta">Scenario Libraries </span>
	<div class="hidden" id="3784178427409650240"><div class="included">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('-2513998908040069933');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img-2513998908040069933"/>
	</a>
&nbsp;<span class="meta">Included page: <a href="MonopolyStories.ScenarioLibrary">.MonopolyStories.ScenarioLibrary</a> <a href="MonopolyStories.ScenarioLibrary?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="-2513998908040069933"><table border="1" cellspacing="0" _TABLENUMBER=5741686981493738640>
<tr><td>scenario</td>
<td>Given a standard Monopoly Board</td>
</tr>
</table>
</div>
</div>
</div>
</div>
<br/><div class="setup">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('3490724918486150217');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img3490724918486150217"/>
	</a>
&nbsp;<span class="meta">Set Up: <a href="MonopolyStories.BasicPlayerMovementExamples.SetUp">.MonopolyStories.BasicPlayerMovementExamples.SetUp</a> <a href="MonopolyStories.BasicPlayerMovementExamples.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="3490724918486150217"><table border="1" cellspacing="0" _TABLENUMBER=2474462959724638840>
<tr><td>import</td>
</tr>
<tr><td>com.om.monopoly</td>
</tr>
</table>
<br/><table class="plain_text_table" _TABLENUMBER=313935616255951730><tr class="hidden"><td><span class="fail">scenario: Bad table: <br/><pre>fitnesse.slimTables.SlimTable$SyntaxError: Scenario tables must have a name.
	at fitnesse.slimTables.ScenarioTable.validateHeader(ScenarioTable.java:100)
	at fitnesse.slimTables.ScenarioTable.parseTable(ScenarioTable.java:35)
	at fitnesse.slimTables.ScenarioTable.appendInstructions(ScenarioTable.java:31)
	at fitnesse.slimTables.SlimTable.appendInstructions(SlimTable.java:83)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.createInstructions(SlimTestSystem.java:276)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processTablesAndGetHtml(SlimTestSystem.java:258)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processAllTablesOnPage(SlimTestSystem.java:245)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.runTestsAndGenerateHtml(SlimTestSystem.java:201)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestSystemPages(MultipleTestsRunner.java:121)
	at fitnesse.responders.run.MultipleTestsRunner.startTestSystemAndExecutePages(MultipleTestsRunner.java:101)
	at fitnesse.responders.run.MultipleTestsRunner.executePagesInTestSystem(MultipleTestsRunner.java:87)
	at fitnesse.responders.run.MultipleTestsRunner.internalExecuteTestPages(MultipleTestsRunner.java:78)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestPages(MultipleTestsRunner.java:57)
	at fitnesse.responders.run.TestResponder.performExecution(TestResponder.java:141)
	at fitnesse.responders.run.TestResponder.doSending(TestResponder.java:45)
	at fitnesse.responders.ChunkingResponder.startSending(ChunkingResponder.java:67)
	at fitnesse.responders.ChunkingResponder.access$000(ChunkingResponder.java:17)
	at fitnesse.responders.ChunkingResponder$RespondingRunnable.run(ChunkingResponder.java:106)
	at java.lang.Thread.run(Thread.java:637)
</pre></span></td>
</tr>
<tr><td>Given a standard Monopoly Board</td>
</tr>
</table><br/><table border="1" cellspacing="0" _TABLENUMBER=8244074426703775649>
<tr><td>script</td>
<td>MonopolyFixture <span class="error">Could not invoke constructor for MonopolyFixture[0]</span></td>
</tr>
</table>
</div>
</div>
<table class="plain_text_table" _TABLENUMBER=8654760192097477031><tr class="hidden"><td>script</td>
</tr>
<tr><td>Given Horse starting on Go <span class="error">The instance scriptTableActor. does not exist</span></td>
</tr>
<tr><td>and Dice always returning 7 <span class="error">The instance scriptTableActor. does not exist</span></td>
</tr>
<tr><td>When Horse takes a turn <span class="error">The instance scriptTableActor. does not exist</span></td>
</tr>
<tr><td>Then Horse will end up on "Community Chess" <span class="error">The instance scriptTableActor. does not exist</span></td>
</tr>
</table>]]></content>
    <relativePageName>MovingFromGoExample</relativePageName>
    
        <tables>
            <table>
        <name>scenarioTable_0</name>
                <row>
                    <col><![CDATA[scenario]]></col>
                    <col><![CDATA[Given a standard Monopoly Board]]></col>
          
        </row>
        
      </table>
            <table>
        <name>import_1</name>
                <row>
                    <col><![CDATA[import]]></col>
          
        </row>
                <row>
                    <col><![CDATA[com.om.monopoly]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scenarioTable_2</name>
                <row>
                    <col><![CDATA[<span class="fail">scenario: Bad table: <br/><pre>fitnesse.slimTables.SlimTable$SyntaxError: Scenario tables must have a name.
	at fitnesse.slimTables.ScenarioTable.validateHeader(ScenarioTable.java:100)
	at fitnesse.slimTables.ScenarioTable.parseTable(ScenarioTable.java:35)
	at fitnesse.slimTables.ScenarioTable.appendInstructions(ScenarioTable.java:31)
	at fitnesse.slimTables.SlimTable.appendInstructions(SlimTable.java:83)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.createInstructions(SlimTestSystem.java:276)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processTablesAndGetHtml(SlimTestSystem.java:258)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processAllTablesOnPage(SlimTestSystem.java:245)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.runTestsAndGenerateHtml(SlimTestSystem.java:201)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestSystemPages(MultipleTestsRunner.java:121)
	at fitnesse.responders.run.MultipleTestsRunner.startTestSystemAndExecutePages(MultipleTestsRunner.java:101)
	at fitnesse.responders.run.MultipleTestsRunner.executePagesInTestSystem(MultipleTestsRunner.java:87)
	at fitnesse.responders.run.MultipleTestsRunner.internalExecuteTestPages(MultipleTestsRunner.java:78)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestPages(MultipleTestsRunner.java:57)
	at fitnesse.responders.run.TestResponder.performExecution(TestResponder.java:141)
	at fitnesse.responders.run.TestResponder.doSending(TestResponder.java:45)
	at fitnesse.responders.ChunkingResponder.startSending(ChunkingResponder.java:67)
	at fitnesse.responders.ChunkingResponder.access$000(ChunkingResponder.java:17)
	at fitnesse.responders.ChunkingResponder$RespondingRunnable.run(ChunkingResponder.java:106)
	at java.lang.Thread.run(Thread.java:637)
</pre></span>]]></col>
          
        </row>
                <row>
                    <col><![CDATA[Given a standard Monopoly Board]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_3</name>
                <row>
                    <col><![CDATA[script]]></col>
                    <col><![CDATA[MonopolyFixture error(Could not invoke constructor for MonopolyFixture[0])]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_4</name>
                <row>
                    <col><![CDATA[script]]></col>
          
        </row>
                <row>
                    <col><![CDATA[Given Horse starting on Go error(The instance scriptTableActor. does not exist)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and Dice always returning 7 error(The instance scriptTableActor. does not exist)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[When Horse takes a turn error(The instance scriptTableActor. does not exist)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[Then Horse will end up on "Community Chess" error(The instance scriptTableActor. does not exist)]]></col>
          
        </row>
        
      </table>
      
    </tables>
    
    
    <instructions>
            <instructionResult>
        <instruction><![CDATA[[import_1_0, import, com.om.monopoly]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_3_0, make, scriptTableActor, MonopolyFixture]]]></instruction>
        <slimResult><![CDATA[!error:Could not invoke constructor for MonopolyFixture[0]]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_3_0</instructionId>
          <col>1</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[!error:Could not invoke constructor for MonopolyFixture[0]]]></actual>
                              <expected><![CDATA[MonopolyFixture]]></expected>
                              <evaluationMessage><![CDATA[MonopolyFixture error(Could not invoke constructor for MonopolyFixture[0])]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_4_0, call, scriptTableActor, GivenHorseStartingOnGo]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_4_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor. does not exist]]></actual>
                              <expected><![CDATA[Given Horse starting on Go]]></expected>
                              <evaluationMessage><![CDATA[Given Horse starting on Go error(The instance scriptTableActor. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_4_1, call, scriptTableActor, andDiceAlwaysReturning7]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_4_1</instructionId>
          <col>0</col>
          <row>2</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor. does not exist]]></actual>
                              <expected><![CDATA[and Dice always returning 7]]></expected>
                              <evaluationMessage><![CDATA[and Dice always returning 7 error(The instance scriptTableActor. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_4_2, call, scriptTableActor, WhenHorseTakesATurn]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_4_2</instructionId>
          <col>0</col>
          <row>3</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor. does not exist]]></actual>
                              <expected><![CDATA[When Horse takes a turn]]></expected>
                              <evaluationMessage><![CDATA[When Horse takes a turn error(The instance scriptTableActor. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_4_3, call, scriptTableActor, ThenHorseWillEndUpOnCommunityChess]]]></instruction>
        <slimResult><![CDATA[!error:The instance scriptTableActor. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_4_3</instructionId>
          <col>0</col>
          <row>4</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[!error:The instance scriptTableActor. does not exist]]></actual>
                              <expected><![CDATA[Then Horse will end up on "Community Chess"]]></expected>
                              <evaluationMessage><![CDATA[Then Horse will end up on "Community Chess" error(The instance scriptTableActor. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

